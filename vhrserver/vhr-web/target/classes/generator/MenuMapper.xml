<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mmt.vhr.mapper.MenuMapper">
    <resultMap id="BaseResultMap" type="com.mmt.vhr.model.Menu">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Mar 23 22:38:18 CST 2020.
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="path" jdbcType="VARCHAR" property="path"/>
        <result column="component" jdbcType="VARCHAR" property="component"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="iconCls" jdbcType="VARCHAR" property="iconCls"/>
        <result column="parentId" jdbcType="INTEGER" property="parentId"/>
        <result column="enabled" jdbcType="BIT" property="enabled"/>
        <association property="meta" javaType="com.mmt.vhr.model.Meta">
            <result column="keepAlive" jdbcType="BIT" property="keepAlive"/>
            <result column="requireAuth" jdbcType="BIT" property="requireAuth"/>
        </association>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Mar 23 22:38:18 CST 2020.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Mar 23 22:38:18 CST 2020.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Mar 23 22:38:18 CST 2020.
        -->
        id, url, path, component, name, iconCls, keepAlive, requireAuth, parentId, enabled
    </sql>

    <select id="getMidByRid" resultType="java.lang.Integer">
        select mid from menu_role where rid = #{rid}
    </select>
    <resultMap id="MenuWithChildren" type="com.mmt.vhr.model.Menu" extends="BaseResultMap">
        <id column="id1" property="id"/>
        <result column="name1" property="name"/>
        <collection property="children" ofType="com.mmt.vhr.model.Menu">
            <result column="id2" property="id"/>
            <result column="name2" property="name"/>
            <collection property="children" ofType="com.mmt.vhr.model.Menu">
                <result column="id3" property="id"/>
                <result column="name3" property="name"/>
            </collection>
        </collection>
    </resultMap>
    <select id="getAllMenus" resultMap="MenuWithChildren">
        SELECT m1.`id` AS id1,m1.`name` AS name1,m2.`id` AS id2,m2.`name` AS name2,m3.`id` AS id3,m3.`name` AS name3 FROM menu m1,menu m2,menu m3 WHERE m1.`id` = m2.`parentId` AND m2.`id` = m3.`parentId` AND m3.`enabled` = TRUE
    </select>
    <resultMap id="MenuWithRole" type="com.mmt.vhr.model.Menu" extends="BaseResultMap">
        <collection property="roles" ofType="com.mmt.vhr.model.Role">
            <id column="rid" property="id"/>
            <result column="rname" property="name"/>
            <result column="rnameZH" property="nameZh"/>
        </collection>
    </resultMap>
    <select id="getAllMenusWithRole" resultMap="MenuWithRole">
        SELECT m.*,r.`id` AS rid,r.`name` AS rname,r.`nameZh` AS rnameZH FROM menu m ,menu_role mr,role r WHERE m.`id` = mr.`mid` AND mr.`rid` = r.`id` ORDER BY m.`id`
    </select>
    <resultMap id="Menus2" type="com.mmt.vhr.model.Menu" extends="BaseResultMap">
        <collection property="children" ofType="com.mmt.vhr.model.Menu">
            <id column="id2" jdbcType="INTEGER" property="id"/>
            <result column="url2" jdbcType="VARCHAR" property="url"/>
            <result column="path2" jdbcType="VARCHAR" property="path"/>
            <result column="component2" jdbcType="VARCHAR" property="component"/>
            <result column="name2" jdbcType="VARCHAR" property="name"/>
            <result column="iconCls2" jdbcType="VARCHAR" property="iconCls"/>
            <result column="parentId2" jdbcType="INTEGER" property="parentId"/>
            <result column="enabled2" jdbcType="BIT" property="enabled"/>
            <association property="meta" javaType="com.mmt.vhr.model.Meta">
                <result column="keepAlive2" jdbcType="BIT" property="keepAlive"/>
                <result column="requireAuth2" jdbcType="BIT" property="requireAuth"/>
            </association>
        </collection>
    </resultMap>
    <select id="getMenusByHrId" resultMap="Menus2">
        SELECT DISTINCT m1.*,m2.`id` AS id2,m2.`component` AS component2, m2.`enabled` AS enabled2,m2.`iconCls` AS iconCls2,m2.`keepAlive` AS keepAlive2,m2.`name` AS name2, m2.`parentId` AS parentId2,m2.`path` AS path2,m2.`requireAuth` AS requireAuth2  FROM menu m1,menu m2,hr_role hrr,menu_role mr WHERE m1.`id` = m2.`parentId` AND hrr.`hrid` = #{hrid} AND hrr.`rid` = mr.`rid` AND mr.`mid` = m2.`id` AND m2.`enabled` = TRUE
    </select>


    <select id="selectByExample" parameterType="com.mmt.vhr.model.MenuExample" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Mar 23 22:38:18 CST 2020.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from menu
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Mar 23 22:38:18 CST 2020.
        -->
        select
        <include refid="Base_Column_List"/>
        from menu
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Mar 23 22:38:18 CST 2020.
        -->
        delete from menu
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.mmt.vhr.model.MenuExample">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Mar 23 22:38:18 CST 2020.
        -->
        delete from menu
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.mmt.vhr.model.Menu">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Mar 23 22:38:18 CST 2020.
        -->
        insert into menu (id, url, path,
        component, name, iconCls,
        keepAlive, requireAuth, parentId,
        enabled)
        values (#{id,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR},
        #{component,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{iconCls,jdbcType=VARCHAR},
        #{keepAlive,jdbcType=BIT}, #{requireAuth,jdbcType=BIT}, #{parentId,jdbcType=INTEGER},
        #{enabled,jdbcType=BIT})
    </insert>
    <insert id="insertSelective" parameterType="com.mmt.vhr.model.Menu">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Mar 23 22:38:18 CST 2020.
        -->
        insert into menu
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="path != null">
                path,
            </if>
            <if test="component != null">
                component,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="iconCls != null">
                iconCls,
            </if>
            <if test="keepAlive != null">
                keepAlive,
            </if>
            <if test="requireAuth != null">
                requireAuth,
            </if>
            <if test="parentId != null">
                parentId,
            </if>
            <if test="enabled != null">
                enabled,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="path != null">
                #{path,jdbcType=VARCHAR},
            </if>
            <if test="component != null">
                #{component,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="iconCls != null">
                #{iconCls,jdbcType=VARCHAR},
            </if>
            <if test="keepAlive != null">
                #{keepAlive,jdbcType=BIT},
            </if>
            <if test="requireAuth != null">
                #{requireAuth,jdbcType=BIT},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=INTEGER},
            </if>
            <if test="enabled != null">
                #{enabled,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.mmt.vhr.model.MenuExample" resultType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Mar 23 22:38:18 CST 2020.
        -->
        select count(*) from menu
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Mar 23 22:38:18 CST 2020.
        -->
        update menu
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.url != null">
                url = #{record.url,jdbcType=VARCHAR},
            </if>
            <if test="record.path != null">
                path = #{record.path,jdbcType=VARCHAR},
            </if>
            <if test="record.component != null">
                component = #{record.component,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.iconCls != null">
                iconCls = #{record.iconCls,jdbcType=VARCHAR},
            </if>
            <if test="record.keepAlive != null">
                keepAlive = #{record.keepAlive,jdbcType=BIT},
            </if>
            <if test="record.requireAuth != null">
                requireAuth = #{record.requireAuth,jdbcType=BIT},
            </if>
            <if test="record.parentId != null">
                parentId = #{record.parentId,jdbcType=INTEGER},
            </if>
            <if test="record.enabled != null">
                enabled = #{record.enabled,jdbcType=BIT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Mar 23 22:38:18 CST 2020.
        -->
        update menu
        set id = #{record.id,jdbcType=INTEGER},
        url = #{record.url,jdbcType=VARCHAR},
        path = #{record.path,jdbcType=VARCHAR},
        component = #{record.component,jdbcType=VARCHAR},
        name = #{record.name,jdbcType=VARCHAR},
        iconCls = #{record.iconCls,jdbcType=VARCHAR},
        keepAlive = #{record.keepAlive,jdbcType=BIT},
        requireAuth = #{record.requireAuth,jdbcType=BIT},
        parentId = #{record.parentId,jdbcType=INTEGER},
        enabled = #{record.enabled,jdbcType=BIT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.mmt.vhr.model.Menu">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Mar 23 22:38:18 CST 2020.
        -->
        update menu
        <set>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="path != null">
                path = #{path,jdbcType=VARCHAR},
            </if>
            <if test="component != null">
                component = #{component,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="iconCls != null">
                iconCls = #{iconCls,jdbcType=VARCHAR},
            </if>
            <if test="keepAlive != null">
                keepAlive = #{keepAlive,jdbcType=BIT},
            </if>
            <if test="requireAuth != null">
                requireAuth = #{requireAuth,jdbcType=BIT},
            </if>
            <if test="parentId != null">
                parentId = #{parentId,jdbcType=INTEGER},
            </if>
            <if test="enabled != null">
                enabled = #{enabled,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.mmt.vhr.model.Menu">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Mar 23 22:38:18 CST 2020.
        -->
        update menu
        set url = #{url,jdbcType=VARCHAR},
        path = #{path,jdbcType=VARCHAR},
        component = #{component,jdbcType=VARCHAR},
        name = #{name,jdbcType=VARCHAR},
        iconCls = #{iconCls,jdbcType=VARCHAR},
        keepAlive = #{keepAlive,jdbcType=BIT},
        requireAuth = #{requireAuth,jdbcType=BIT},
        parentId = #{parentId,jdbcType=INTEGER},
        enabled = #{enabled,jdbcType=BIT}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>